#include <iostream>
#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define pi acos(-1)
typedef complex<double>CX;


void fft(vector<CX>&a,bool inv){
    int n=a.size();
    if(n==1)
      return;
    vector<CX>even(n/2),odd(n/2);
    for(int i=0;i<n/2;i++){
        even[i]=a[i*2];
        odd[i]=a[i*2+1];
    }
    fft(even,inv);
    fft(odd,inv);
    double angle=2*pi/n*(inv?-1:1);
    CX w(1,0),wn(cos(angle),sin(angle));
    for(int i=0;i<n/2;i++){
        a[i]=even[i]+w*odd[i];
        a[i+n/2]=even[i]-w*odd[i];
        w*=wn;
    }
}
vector<int>multiply(vector<int>a,vector<int>b){
    int n=a.size();
    vector<CX>A(a.begin(),a.end());
    vector<CX>B(b.begin(),b.end());
    fft(A,0);
    fft(B,0);
    for(int i=0;i<A.size();i++)
        A[i]*=B[i];
    fft(A,1);
    vector<int>ret;
    for(int i=0;i<A.size();i++){
        ret.pb(round(real(A[i]/double(n))));
    }
    return ret;
}
vector<int>power(vector<int>v,int k){
  if(k==1)
    return v;
  vector<int>cur=power(v,k/2);
  cur=multiply(cur,cur);
  if(k&1)
    cur=multiply(v,cur);
  return cur;
}
int main()
{
    //freopen("test.in","r",stdin);
   //freopen("test.out","w",stdout);
   int n;
   scanf("%d",&n);
   while(n--){
        string a,b;
        cin>>a>>b;
        int len=a.length()+b.length();
        for(int i=1;;i*=2){
            if(i>len){
                len=i;
                break;
            }
        }
        vector<int>x(len,0),y(len,0);
        for(int i=0;i<a.length();i++)x[a.length()-1-i]=a[i]-'0';
        for(int i=0;i<b.length();i++)y[b.length()-i-1]=b[i]-'0';
        vector<int>c=multiply(x,y);
        int carry=0,last=c.size()-1;
        for(int i=c.size()-1;i>0;i--){
            if(c[i])break;
            last--;
        }
        for(int i=0;i<=last||carry;i++){
             if(c[i]+carry<10){
                c[i]+=carry;
                carry=0;
             }
             else{
                int tmp=(c[i]+carry)/10;
                c[i]=(c[i]+carry)%10;
                carry=tmp;
             }
             last=max(last,i);
        }
        if(carry)printf("%d",carry);
        for(int i=last;i>=0;i--)printf("%d",c[i]);
        printf("\n");
   }
   return 0;
}

