#include <iostream>
#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define ll long long
#define F first
#define S second
#define PI acos(-1)
#define EPS 1e-8
#define BASE 53ll
#define mod 1000000007ll
#define ld long double
#define MAX 900001
#define NIL 0
#define INF (1<<28)

typedef pair<int,int>ii;
typedef pair<ii,int>state;
typedef pair<int,ii>edge;
typedef pair<vector<int>,int>vii;
const int N=2005;
const int M=1000005;

ll gcd(ll a, ll b) { return b == 0 ? a : gcd(b, a % b); }
ll lcm(ll a, ll b) { return a * (b / gcd(a, b)); }
ll fact(ll n){ll ret=1;for(int i=1;i<=n;i++)ret*=i;return ret;}
bool is_vowel(char c){if(c=='a'||c=='e'||c=='i'||c=='o'||c=='u'||c=='y')return 1;return 0;}

ld getDistance(ld x1,ld y1,ld x2,ld y2){
   return sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));
}

int main()
{
   //freopen("test.in","r",stdin);
   //freopen("test.out","w",stdout);
   ll x[2],y[2],r[2];
   for(int i=0;i<2;i++)cin>>x[i]>>y[i]>>r[i];
   if((x[0]-x[1])*(x[0]-x[1])+(y[0]-y[1])*(y[0]-y[1])>=(r[0]+r[1])*(r[0]+r[1]))cout<<"0.0";
   else if((x[0]-x[1])*(x[0]-x[1])+(y[0]-y[1])*(y[0]-y[1])<=abs(r[0]-r[1])*abs(r[0]-r[1])){
             cout<<setprecision(9)<<PI*pow(min(r[0]*1.0,r[1]*1.0),2.0);
   }
   else{
       ld D=getDistance(x[0]*1.0,y[0]*1.0,x[1]*1.0,y[1]*1.0);
       ld theta1=acos((r[0]*1.0*r[0]+D*D-r[1]*1.0*r[1])/(2.0*r[0]*D));
       ld Area1=theta1*r[0]*r[0]*1.0-0.5*r[0]*r[0]*sin(theta1*2.0);
       ld theta2=acos((r[1]*1.0*r[1]+D*D-r[0]*1.0*r[0])/(2.0*r[1]*D));
       ld Area2=theta2*r[1]*r[1]*1.0-0.5*r[1]*r[1]*sin(theta2*2.0);
       cout<<setprecision(9)<<Area1+Area2;
   }
   return 0;
}
